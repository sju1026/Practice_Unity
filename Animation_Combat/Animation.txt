Animation

Model Inspector
- Model : 외부에서 가져온 FBX 모델의 기본적인 정보
> Scene : 광원과 카메라 임포트 여부, 모델 크기 등 씬과 관련된 옵션 설정
> Scale Factor : 원본 모델의 크기 설정 (Unity Scale 1일 때 크기)
> Import BlendShapes : 블렌드 셰이프를 메시와 함께 Import
> Meshes : 메시 압축, 최적화 등 메시와 관련된 옵션 설정
> Mesh Compression : 메시 파일 크기를 줄일 압축 레벨 설정
> Generate Colliders : 메시 콜라이더를 사용할지 여부 (충돌 처리)
> Geometry : UV와 노말 처리 등을 위한 지오메트리 관련 옵션 설정
> nORMALS : 노말 벡터를 계산할지, 어떻게 계산할지 설정

- Rig : FBX 모델의 리깅 정보 / 모델의 뼈대를 만들어 심거나 뼈대를 할당하여, 모델이 애니메이션 될 수 있는 상태로 만드는 것
- Animation Type
> None : 애니메이션이 없을 때 (지형, 건물, 아이템 등)
> Legacy : Unity 3.x 이전 버전에서 사용 (Animation 컴포넌트)
> Generic : 정점 애니메이션 (Animator 컴포넌트)
> Humanoid : 본 애니메이션 (Ainimator 컴포넌트)
>> Avatar Definition : 아바타 정의를 가져올 위치 선택
>> Skin Weights : 하나의 버텍스에 영향을 줄 수 있는 최대 뼈대 수
>> Optimize Game Object : 게임 오브젝트의 Transform 계층구조를 Avatar와 Animator 컴포넌트에서 제거 (성능 향상)
>>> Extra Transforms to Expose : Optimize Game Object에 체크되어있을 때만 활성화 되는 메뉴
		  	      -> 체크되는 Transform은 게임오브젝트의 자식 오브젝트로 출력된다
		  	      -> Optimize Game Object 비활성화 = 모든 부위의 Transform 정보가 출력된다. 애니메이션이 재생되면 해당 부위의 Transform들이 실시간으로 갱신된다
		  	      -> Optimize Game Object 활성화 = Extra Transforms to Expose에서 오른팔 체크시  
- Animation : FBX 모델의 애니메이션 정보

- Materials : FBX 모델에 적용되는 재질 정보

==============================================================================

Animator 컴포넌트
- Controller : 애니메이션(상태, State)의 전환을 처리하는 노드 기반 시스템 상태 머신 (State Machine)
- Avatar : 외부 툴로 제작한 모델 파일을 유니티에서 다룰 수 있게 연결하는 데이터
> 애니메이션이 되는 Rig 정보로 *.fbx 파일을 Import해서 생성하였다면 자동 설정되어 있다 / 동일한 Rig 정보를 가지고 있는 모델이라면 리타겟팅을 이용해 애니메이션 재사용이 가능
- Apply Root Motion : Animation Clip에 포함된 루트 모션을 사용할 것인지 설정
> true : 애니메이션에 포함된 이동, 크기 변화, 회전을 사용
> false : 애니메이션에 포함된 이동, 크기변화, 회전을 사용하지 않고 코드로 직접 제어
- Update Mode : 애니메이션의 계산을 언제 할지 설정
> Normal : Update() 함수와 같은 횟수로 호출
> Animate Physics : FixedUpdete() 함수와 같은 횟수로 호출
> Unscaled Time : Update() 함수와 같은 횟수로 호출되지만 TimeScale의 영향을 받지 않는다
- Culling Mode : 애니메이션 계산의 컬링 모드 설정
> Always Animate : 컬링을 하지 않고 항상 애니메이션 계산을 한다
> Cull Update Transforms : 컬링 대싱일 때 애니메이션 계산의 일부를 생략(리타깃, IK, Transform)
> Cull Completely : 컬링 대상일 때 모든 애니메이션 계산을 생략

Animator Contoller Asset
- Unity 기본 제공 상태
> Any State : 모든 상태에서 작동하는 상태
> Entry : Sub-State Machine을 사용할 때 외부에서 Sub-State Machine으로 들어오는 상태
> Eixt : Sub-State Machine을 사용할 때 외부로 나가는 상태

Animation Inspector
- Motion : 애니메이션 클립
- Speed : 애니메이션 재생 속도
- Multiplier : 재생 속도에 애니메이션 파라미터의 값을 곱한다
- Mirror : 애니메이션 반전
- Cycle Offset : 반복 재생시키는 경우 시작 위치 (재생 시간을 0-1 사이의 값으로 설정)
- Foot IK : 스테이트 안에 IK 계산에서 발이 땅에 붙도록 자동으로 보정
- Write Defaults : 스테이트를 시작할 때 키 없는 프로퍼티에 기본값을 설정
* animator.Play("상태이름")

Animator 상태 전이
- Transitions : 선택중인 상태 전이 목록
> Solo : 목록 중에 설정된 여러 개의 Solo에서 선택된 것만 활성화
> Mute : 해당 사앹전이를 실행하지 않는다
- 이름 : 상태전이의 이름 (공백가능)
- Has Exit Time : 종료시간을 사용할 것인지 설정
> true : Eixt Time을 사용하기 때문에 조건(Conditions)을 만족해도 Exit Time까지 애니메이션을 재생해야 동작이 변경된다
> false : 조건을 만족하면 바로 동작이 변경된다
- Setting
> Exit Time : 상태전이가 일어날 때 애니메이션 재생 비율
> Fixed Duration : Eixt Time을 초로 지정할 때 On, 재생 시간의 0-1 비율로 지정할 때 Off
> Transition Duration : 전이시 애니메이션 블랜드에 소요되는 시간 (앞에 재생되는 Idle과 뒤에 재생되는 Run, 두 애니메이션이 섞여서 재생되는 시간)
> Transition Offset : 전이되어 재생하는 애니메이션의 재생 시작 시간 (0-1) (예를들어 0.5이면 전이되어 재생되는 애니메이션의 50% 프레임부터 시작)
> Interruption Source : 상태전이를 중단할 때 조건 지정
> Orderd Interruption : 현재 전환이 순서와 관계없이 다른 전환에 의해 중단될 수 있는지 설정
> Conditions : 상태 전이가 일어나 다른 애니메이션으로 전환되기 위한 조건 (현재 Animator Controller의 Param에 생서오디어 있는 변수만 등록)
* Param Set
- SetBool(string name, bool value) / SetFloat(string name, float value) / SetInteger(string name, int value) / SetTrigger(string name)
* Param Get
- bool value = GetBool(string name) / float value = GetFloat(string name) / int value = GetInteger(string name)

==============================================================================















